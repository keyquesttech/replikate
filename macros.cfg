#####################################################################
#   Home override
#####################################################################

[gcode_macro _HOME_X]
gcode:
  # Always use consistent run_current on A/B steppers during sensorless homing
  {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
  {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
  {% set HOME_CURRENT = 0.3 %}

  SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}

  G90
  G28 X
  G1 X{110} F1200
  G4 P1000

  SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}  

[gcode_macro _HOME_Y]
gcode:
  # Set current for sensorless homing
  {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
  {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
  {% set HOME_CURRENT = 0.3 %}

  SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

  G90
  G28 Y
  G1 Y{110} F1200
  G4 P1000

  SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

[gcode_macro _HOME_Z]
gcode:
  G90
  G28 Z
  G1 Z10
  

[homing_override]
axes: xyz
gcode:
  {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}
  {% if home_all or 'Y' in params %}  
    _HOME_Y
  {% endif %}
  {% if home_all or 'X' in params %}
    _HOME_X
  {% endif %}
  {% if home_all or 'Z' in params %}
    _HOME_Z
  {% endif %}

#####################################################################
#   Macro to start print
#####################################################################

[gcode_macro _PRINT_START]
gcode:
  {% set PARKZ = 20|float %}
  {% set MID_X = printer.configfile.settings['stepper_x'].position_max|float %}
  {% set MID_y = printer.configfile.settings['stepper_y'].position_max|float %}
  {% set bedtemp = params.BED|string %} #Bed temp parameter
  {% set hotendtemp = params.HOTEND|string %} #Extruder temp parameter
  G21 #Use mm as units
  G90 #Use absolute coordinates

  M83 #Use extruder relative mode

  # M82 #Use absolute distances for extrusion
  # G92 E0 #Reset extruder distance

  G28 #Home printer
  M400
  Z_TILT_ADJUST
  # G1 Z{PARKZ} F3600 #Move bed to Z20 at F50mm/s
  M400
  # G0 X{MID_X/2} Y{MID_y/2} F3600 #Park nozzle at rear and in the middle
  G1 X{MID_X/2} Y{MID_y/2} F3600

  M190 S{bedtemp} #Set & wait for bed temp
  M400
  G28 Z
  M400
  M109 S{hotendtemp} #Set & wait for hotend temp
  M117
  BED_MESH_CALIBRATE #Use beacon to level the bed
  G4 P60000
  LINE_PURGE

#####################################################################
#   Macro to pause print
#####################################################################

[gcode_macro PAUSE]
rename_existing: PAUSE_BASE
gcode:
  # Parameters
  {% set z = params.Z|default(10)|int %} #z hop amount
  {% if printer['pause_resume'].is_paused|int == 0 %}
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z} #set z hop variable for reference in resume macro
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target} #set hotend temp variable for reference in resume macro
    SAVE_GCODE_STATE NAME=PAUSE #save current print position for resume
    {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %} #check that zhop doesn't exceed z max
      G91 #relative positioning
      G1 Z{z} F900 #raise Z up by z hop amount
    {% else %}
      { action_respond_info("Pause zhop exceeds maximum Z height.") } #if z max is exceeded, show message and set zhop value for resume to 0
      SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
    {% endif %}
    G90  #absolute positioning
    G1 X60 Y120 F3600 #park toolhead at front center
    SAVE_GCODE_STATE NAME=PAUSEPARK #save parked position in case toolhead is moved during the pause (otherwise the return zhop can error)
    M104 S0 #turn off hotend
    SET_IDLE_TIMEOUT TIMEOUT=43200 #set timeout to 12 hours
  {% endif %}
  PAUSE_BASE

#####################################################################
#   Macro to resume print
#####################################################################

[gcode_macro RESUME]
rename_existing: RESUME_BASE
variable_zhop: 0
variable_etemp: 0
gcode:
  # Parameters
  {% set e = params.E|default(2.5)|int %} #hotend prime amount (in mm)
  {% if printer['pause_resume'].is_paused|int == 1 %}
    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout} #set timeout back to configured value
    {% if etemp > 0 %}
      M109 S{etemp|int} #wait for hotend to heat back up
    {% endif %}
    RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100 #go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)
    G91 #relative positioning
    M83 #relative extruder positioning
    {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}
      G1 Z{zhop * -1} E{e} F900 #prime nozzle by E, lower Z back down
    {% else %}
      G1 Z{zhop * -1} F900 #lower Z back down without priming (just in case we are testing the macro with cold hotend)
    {% endif %}
    RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60 #restore position
    RESUME_BASE
  {% endif %}

#####################################################################
#   Macro to end print
#####################################################################

[gcode_macro _PRINT_END]
gcode:
  {% set MID_X = printer.configfile.settings['stepper_x'].position_max|float %}
  {% set MID_Y = printer.configfile.settings['stepper_y'].position_max|float %}
  M400 #Wait for buffer to clear
  G92 E0 #Zero the extruder
  G1 E-0.50 F3600 #Retract filament
  # G90 #Absolute positioning
  # G0 X{MID_X/2} Y{MID_Y/2} F3600 #Park nozzle at rear and in the middle
  G91
  G1 Z5 F1200
  G90
  M107 #Turn off fan
  TURN_OFF_HEATERS #Turn off heaters
  DISABLE_STEPPERS #Disable steppers
  UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

#####################################################################
#   Macro to cancel print
#####################################################################

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode:
  {% set MID_X = printer.configfile.settings['stepper_x'].position_max|float %}
  {% set MID_Y = printer.configfile.settings['stepper_y'].position_max|float %}
  # G90 #Absolute positioning
  # G0 X{MID_X/2} Y{MID_Y/2} F3600 #Park nozzle at rear and in the middle
  G91
  G1 Z5 F1200
  G90
  M107 #Turn off fan
  DISABLE_STEPPERS
  TURN_OFF_HEATERS
  SDCARD_RESET_FILE
  CANCEL_PRINT_BASE

#####################################################################
#   Macro to disable steppers
#####################################################################

[gcode_macro DISABLE_STEPPERS]
description: Disable the steppers
gcode:
  M84
  RESPOND TYPE=command MSG="Steppers disabled"

#####################################################################
#   Filament loading
#####################################################################

[gcode_macro LOAD_FILAMENT]
gcode:
  M83 #Set extruder to relative
  G1 E60 F300 #Load
  G1 E20 F150 #Prime nozzle with filament
  M82 #Set extruder to absolute
  RESPOND TYPE=command MSG="Load filament"

[gcode_macro UNLOAD_FILAMENT]
gcode:
  M83 #Set extruder to relative
  G1 E5 F300 #Extrude a little to soften tip
  G1 E-70 F2000 #Retract some, but not too much or it will jam
  M82 #Set extruder to absolute
  RESPOND TYPE=command MSG="Unload filament"

[gcode_macro M600] # Macro for filament run-out
gcode:
  PAUSE

#####################################################################
#   Auto shut off printer
#####################################################################

[gcode_macro _POWER_OFF_PRINTER]
gcode:
  {action_call_remote_method("set_device_power",
                             device="printer",
                             state="off")}

[delayed_gcode POWER_OFF_PRINTER_CHECK]
gcode:
  {% if printer.idle_timeout.state == "Idle" or printer.idle_timeout.state == "Ready" %}
    {% if printer.extruder.temperature < 48.0 and printer.heater_bed.temperature < 60.0 %}
        {% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
            UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
            _POWER_OFF_PRINTER
        {% else %}
            UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
        {% endif %}
    {% else %}
        {% if printer.idle_timeout.state == "Printing" %}
            UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
        {% else %}
            {% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
                UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
            {% else %}
                UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
            {% endif %}
        {% endif %}
    {% endif %}
  {% endif %}

#####################################################################
#   Status LED
#####################################################################

[gcode_macro ON_LED_OFF]
gcode:
  SET_PIN PIN=mcuonled VALUE=0

[gcode_macro ON_LED_ON]
gcode:
  SET_PIN PIN=mcuonled VALUE=1

#####################################################################
#   Macros to run on startup
#####################################################################

[delayed_gcode setfanbtmspeed]
initial_duration: 1
gcode:
  SET_FAN_SPEED FAN=bottom_bay SPEED=0.2
  NEOPIXEL_DISPLAY LED=hotend_led TYPE=extruder_temp MODE=glow

#####################################################################
#   Extras
#####################################################################
